{"ast":null,"code":"var _jsxFileName = \"/Users/manishkumar/Documents/Project/Frontend/src/contexts/AudioContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioContext = /*#__PURE__*/createContext();\nexport const useAudio = () => {\n  _s();\n  const context = useContext(AudioContext);\n  if (!context) {\n    throw new Error('useAudio must be used within an AudioProvider');\n  }\n  return context;\n};\n_s(useAudio, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AudioProvider = ({\n  children\n}) => {\n  _s2();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [musicFiles, setMusicFiles] = useState([]);\n  const [currentMusic, setCurrentMusic] = useState(null);\n  const audioRef = useRef(new Audio('/romantic-music.mp3'));\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.loop = true;\n    audio.volume = 0.3;\n    fetchMusicFiles();\n    return () => {\n      audio.pause();\n      audio.currentTime = 0;\n      setIsPlaying(false);\n    };\n  }, []);\n  const fetchMusicFiles = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/music');\n      setMusicFiles(response.data);\n      // Set the first music file as current if available\n      if (response.data.length > 0 && !currentMusic) {\n        setCurrentMusic(response.data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching music files:', error);\n    }\n  };\n  const toggleMusic = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n      setIsPlaying(false);\n    } else {\n      // Only set src if it's different from current src or if no src is set\n      if (currentMusic && audio.src !== `http://localhost:8080/api/images/${currentMusic}`) {\n        audio.src = `http://localhost:8080/api/images/${currentMusic}`;\n      }\n      audio.play().catch(() => {\n        console.log('Audio autoplay blocked');\n      });\n      setIsPlaying(true);\n    }\n  };\n  const changeMusic = musicFile => {\n    const audio = audioRef.current;\n    const wasPlaying = isPlaying;\n    if (wasPlaying) {\n      audio.pause();\n    }\n    setCurrentMusic(musicFile);\n    if (musicFile) {\n      audio.src = `http://localhost:8080/api/images/${musicFile}`;\n      if (wasPlaying) {\n        audio.play().catch(() => {\n          console.log('Audio autoplay blocked');\n        });\n      }\n    }\n  };\n  const stopMusic = () => {\n    const audio = audioRef.current;\n    audio.pause();\n    audio.currentTime = 0;\n    setIsPlaying(false);\n  };\n  const value = {\n    isPlaying,\n    musicFiles,\n    currentMusic,\n    toggleMusic,\n    changeMusic,\n    stopMusic,\n    fetchMusicFiles\n  };\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s2(AudioProvider, \"q6KJGZqC5X1oCTixPSFd/wztrx4=\");\n_c = AudioProvider;\nvar _c;\n$RefreshReg$(_c, \"AudioProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","AudioContext","useAudio","_s","context","Error","AudioProvider","children","_s2","isPlaying","setIsPlaying","musicFiles","setMusicFiles","currentMusic","setCurrentMusic","audioRef","Audio","audio","current","loop","volume","fetchMusicFiles","pause","currentTime","response","get","data","length","error","console","toggleMusic","src","play","catch","log","changeMusic","musicFile","wasPlaying","stopMusic","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manishkumar/Documents/Project/Frontend/src/contexts/AudioContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst AudioContext = createContext();\n\nexport const useAudio = () => {\n  const context = useContext(AudioContext);\n  if (!context) {\n    throw new Error('useAudio must be used within an AudioProvider');\n  }\n  return context;\n};\n\nexport const AudioProvider = ({ children }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [musicFiles, setMusicFiles] = useState([]);\n  const [currentMusic, setCurrentMusic] = useState(null);\n  const audioRef = useRef(new Audio('/romantic-music.mp3'));\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    audio.loop = true;\n    audio.volume = 0.3;\n    \n    fetchMusicFiles();\n    \n    return () => {\n      audio.pause();\n      audio.currentTime = 0;\n      setIsPlaying(false);\n    };\n  }, []);\n\n  const fetchMusicFiles = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/music');\n      setMusicFiles(response.data);\n      // Set the first music file as current if available\n      if (response.data.length > 0 && !currentMusic) {\n        setCurrentMusic(response.data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching music files:', error);\n    }\n  };\n\n  const toggleMusic = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n      setIsPlaying(false);\n    } else {\n      // Only set src if it's different from current src or if no src is set\n      if (currentMusic && audio.src !== `http://localhost:8080/api/images/${currentMusic}`) {\n        audio.src = `http://localhost:8080/api/images/${currentMusic}`;\n      }\n      audio.play().catch(() => {\n        console.log('Audio autoplay blocked');\n      });\n      setIsPlaying(true);\n    }\n  };\n\n  const changeMusic = (musicFile) => {\n    const audio = audioRef.current;\n    const wasPlaying = isPlaying;\n    \n    if (wasPlaying) {\n      audio.pause();\n    }\n    \n    setCurrentMusic(musicFile);\n    \n    if (musicFile) {\n      audio.src = `http://localhost:8080/api/images/${musicFile}`;\n      if (wasPlaying) {\n        audio.play().catch(() => {\n          console.log('Audio autoplay blocked');\n        });\n      }\n    }\n  };\n\n  const stopMusic = () => {\n    const audio = audioRef.current;\n    audio.pause();\n    audio.currentTime = 0;\n    setIsPlaying(false);\n  };\n\n  const value = {\n    isPlaying,\n    musicFiles,\n    currentMusic,\n    toggleMusic,\n    changeMusic,\n    stopMusic,\n    fetchMusicFiles\n  };\n\n  return (\n    <AudioContext.Provider value={value}>\n      {children}\n    </AudioContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACrF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,gBAAGR,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMS,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGV,UAAU,CAACO,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMoB,QAAQ,GAAGlB,MAAM,CAAC,IAAImB,KAAK,CAAC,qBAAqB,CAAC,CAAC;EAEzDpB,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGF,QAAQ,CAACG,OAAO;IAC9BD,KAAK,CAACE,IAAI,GAAG,IAAI;IACjBF,KAAK,CAACG,MAAM,GAAG,GAAG;IAElBC,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAM;MACXJ,KAAK,CAACK,KAAK,CAAC,CAAC;MACbL,KAAK,CAACM,WAAW,GAAG,CAAC;MACrBb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,iCAAiC,CAAC;MACnEb,aAAa,CAACY,QAAQ,CAACE,IAAI,CAAC;MAC5B;MACA,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACd,YAAY,EAAE;QAC7CC,eAAe,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MACnC;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMb,KAAK,GAAGF,QAAQ,CAACG,OAAO;IAC9B,IAAIT,SAAS,EAAE;MACbQ,KAAK,CAACK,KAAK,CAAC,CAAC;MACbZ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACL;MACA,IAAIG,YAAY,IAAII,KAAK,CAACc,GAAG,KAAK,oCAAoClB,YAAY,EAAE,EAAE;QACpFI,KAAK,CAACc,GAAG,GAAG,oCAAoClB,YAAY,EAAE;MAChE;MACAI,KAAK,CAACe,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;QACvBJ,OAAO,CAACK,GAAG,CAAC,wBAAwB,CAAC;MACvC,CAAC,CAAC;MACFxB,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMyB,WAAW,GAAIC,SAAS,IAAK;IACjC,MAAMnB,KAAK,GAAGF,QAAQ,CAACG,OAAO;IAC9B,MAAMmB,UAAU,GAAG5B,SAAS;IAE5B,IAAI4B,UAAU,EAAE;MACdpB,KAAK,CAACK,KAAK,CAAC,CAAC;IACf;IAEAR,eAAe,CAACsB,SAAS,CAAC;IAE1B,IAAIA,SAAS,EAAE;MACbnB,KAAK,CAACc,GAAG,GAAG,oCAAoCK,SAAS,EAAE;MAC3D,IAAIC,UAAU,EAAE;QACdpB,KAAK,CAACe,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;UACvBJ,OAAO,CAACK,GAAG,CAAC,wBAAwB,CAAC;QACvC,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMrB,KAAK,GAAGF,QAAQ,CAACG,OAAO;IAC9BD,KAAK,CAACK,KAAK,CAAC,CAAC;IACbL,KAAK,CAACM,WAAW,GAAG,CAAC;IACrBb,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM6B,KAAK,GAAG;IACZ9B,SAAS;IACTE,UAAU;IACVE,YAAY;IACZiB,WAAW;IACXK,WAAW;IACXG,SAAS;IACTjB;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,YAAY,CAACuC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhC,QAAA,EACjCA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACpC,GAAA,CA5FWF,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}